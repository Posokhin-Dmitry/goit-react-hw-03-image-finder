{"version":3,"sources":["Servises/api.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","helpers/filterData.js","App.js","index.js"],"names":["searchQuery","page","query","maxPerPage","axios","get","Searchbar","state","handleSubmit","event","preventDefault","trim","alert","props","onSubmit","setState","handleQuery","target","value","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","tags","webformatURL","largeImageURL","onClick","src","alt","ImageGallery","dataImages","onClickImg","map","id","Button","Loader","color","height","width","timeout","Modal","handleKeydown","e","code","onClose","handleOverlay","overlay","document","querySelector","window","addEventListener","removeEventListener","img","filterData","App","largeImage","isLoading","showModal","api","then","data","hits","catch","error","console","log","finally","handleFormSubmit","handleClickLoadMore","toggleModal","handleClickImg","prevProps","prevState","prevPage","prevQuery","newPage","newQuery","scrollTo","top","documentElement","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.683add70.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst BASEURL = 'https://pixabay.com/api/';\r\nconst key = '23587360-9e8d8834fc0ca0fd407cdbeb2';\r\n\r\nexport const searchQuery = (page, query, maxPerPage) =>\r\n  axios.get(\r\n    BASEURL +\r\n      `?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=${maxPerPage}`,\r\n  );\r\n","import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.query.trim() === '') {\r\n      alert('enter the name of the picture');\r\n    }\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  handleQuery = event => {\r\n    this.setState({ query: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.query}\r\n            onChange={this.handleQuery}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ tags, webformatURL, largeImageURL, onClick }) => {\r\n  return (\r\n    <li\r\n      className=\"ImageGalleryItem\"\r\n      onClick={() => onClick({ largeImageURL, tags })}\r\n    >\r\n      <img className=\"ImageGalleryItem-image\" src={webformatURL} alt={tags} />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  tags: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  werformatURL: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ dataImages, onClickImg }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {dataImages.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          tags={tags}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          onClick={onClickImg}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  dataImages: PropTypes.arrayOf(PropTypes.object),\r\n  onClickImg: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import LoaderSpinner from 'react-loader-spinner';\r\nconst Loader = () => (\r\n  <div>\r\n    <LoaderSpinner\r\n      className=\"loader\"\r\n      type=\"TailSpin\"\r\n      color=\"#3f51b5\"\r\n      height={100}\r\n      width={100}\r\n      timeout={100000}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    img: PropTypes.object.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  handleKeydown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleOverlay = e => {\r\n    const overlay = document.querySelector('.Overlay');\r\n    if (e.target === overlay) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.handleOverlay}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.img.largeImageURL} alt={this.props.img.tags} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","const filterData = dataImages =>\r\n  dataImages.map(({ id, webformatURL, tags, largeImageURL }) => ({\r\n    id,\r\n    webformatURL,\r\n    tags,\r\n    largeImageURL,\r\n  }));\r\n\r\nexport default filterData;\r\n","import React, { Component } from 'react';\r\nimport * as api from './Servises/api';\r\nimport Searchbar from './components/Searchbar/Searchbar';\r\nimport ImageGallery from './components/ImageGallery/ImageGallery';\r\nimport Button from './components/Button/Button';\r\nimport Loader from './components/Loader/Loader';\r\nimport Modal from './components/Modal/Modal';\r\nimport filterData from './helpers/filterData';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    page: 1,\r\n    dataImages: [],\r\n    largeImage: {},\r\n    maxPerPage: 12,\r\n    query: '',\r\n    isLoading: false,\r\n    showModal: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevPage = prevState.page;\r\n    const prevQuery = prevState.query;\r\n    const newPage = this.state.page;\r\n    const newQuery = this.state.query;\r\n    const maxPerPage = this.state.maxPerPage;\r\n\r\n    if (prevQuery !== newQuery || prevPage !== newPage) {\r\n      this.searchQuery(newPage, newQuery, maxPerPage);\r\n    }\r\n\r\n    if (newPage > 1) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }\r\n\r\n  searchQuery = (page, query, maxPerPage) => {\r\n    this.setState({ isLoading: true });\r\n    api\r\n      .searchQuery(page, query, maxPerPage)\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          dataImages: [...this.state.dataImages, ...filterData(data.hits)],\r\n        });\r\n      })\r\n      .catch(error => console.log(error))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  handleFormSubmit = query => {\r\n    this.setState({ dataImages: [], page: 1 });\r\n    this.setState({ query });\r\n  };\r\n\r\n  handleClickLoadMore = () => {\r\n    let { page } = this.state;\r\n    page += 1;\r\n    this.setState({ page });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\r\n  };\r\n\r\n  handleClickImg = largeImage => {\r\n    this.setState({ largeImage });\r\n    this.toggleModal();\r\n  };\r\n\r\n  render() {\r\n    const { dataImages, isLoading, showModal, largeImage } = this.state;\r\n    const {\r\n      handleFormSubmit,\r\n      handleClickImg,\r\n      handleClickLoadMore,\r\n      toggleModal,\r\n    } = this;\r\n    return (\r\n      <div className=\"App\">\r\n        <Searchbar onSubmit={handleFormSubmit} />\r\n        {dataImages.length > 0 && (\r\n          <ImageGallery dataImages={dataImages} onClickImg={handleClickImg} />\r\n        )}\r\n        {isLoading && <Loader />}\r\n        {dataImages.length > 11 && <Button onClick={handleClickLoadMore} />}\r\n        {showModal && <Modal img={largeImage} onClose={toggleModal} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}